{"errors":[{"message":"Type Mismatch\n    .\n    The inferred type\n      VV : {v : GHC.Prim.Addr# | v == \"/home/pelle/rbt-verification/src/RedBlackTree.hs:26:5-65|function makeBlack\"}\n    .\n    is not a subtype of the required type\n      VV : {VV##2540 : GHC.Prim.Addr# | totalityError \"Pattern match(es) are non-exhaustive\"}\n    .\n    Constraint id 70","start":{"column":5,"line":26},"stop":{"column":66,"line":26}},{"message":"Type Mismatch\n    .\n    The inferred type\n      VV : {v : GHC.Prim.Addr# | v == \"/home/pelle/rbt-verification/src/RedBlackTree.hs:28:1-150|function balance\"}\n    .\n    is not a subtype of the required type\n      VV : {VV##2636 : GHC.Prim.Addr# | totalityError \"Pattern match(es) are non-exhaustive\"}\n    .\n    Constraint id 76","start":{"column":1,"line":28},"stop":{"column":151,"line":28}},{"message":"Type Mismatch\n    .\n    The inferred type\n      VV : {v : GHC.Prim.Addr# | v == \"/home/pelle/rbt-verification/src/RedBlackTree.hs:28:1-150|function balance\"}\n    .\n    is not a subtype of the required type\n      VV : {VV##2638 : GHC.Prim.Addr# | totalityError \"Pattern match(es) are non-exhaustive\"}\n    .\n    Constraint id 77","start":{"column":1,"line":28},"stop":{"column":151,"line":28}},{"message":"Type Mismatch\n    .\n    The inferred type\n      VV : {v : GHC.Prim.Addr# | v == \"/home/pelle/rbt-verification/src/RedBlackTree.hs:28:1-150|function balance\"}\n    .\n    is not a subtype of the required type\n      VV : {VV##2677 : GHC.Prim.Addr# | totalityError \"Pattern match(es) are non-exhaustive\"}\n    .\n    Constraint id 89","start":{"column":1,"line":28},"stop":{"column":151,"line":28}},{"message":"Type Mismatch\n    .\n    The inferred type\n      VV : {v : GHC.Prim.Addr# | v == \"/home/pelle/rbt-verification/src/RedBlackTree.hs:28:1-150|function balance\"}\n    .\n    is not a subtype of the required type\n      VV : {VV##2679 : GHC.Prim.Addr# | totalityError \"Pattern match(es) are non-exhaustive\"}\n    .\n    Constraint id 90","start":{"column":1,"line":28},"stop":{"column":151,"line":28}},{"message":"Type Mismatch\n    .\n    The inferred type\n      VV : {v : GHC.Prim.Addr# | v == \"/home/pelle/rbt-verification/src/RedBlackTree.hs:28:1-150|function balance\"}\n    .\n    is not a subtype of the required type\n      VV : {VV##2681 : GHC.Prim.Addr# | totalityError \"Pattern match(es) are non-exhaustive\"}\n    .\n    Constraint id 91","start":{"column":1,"line":28},"stop":{"column":151,"line":28}}],"sptypes":[{"ann":"GHC.Types.Module","ident":"RedBlackTree.$trModule","start":{"column":1,"line":1},"stop":{"column":1,"line":1}},{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (RedBlackTree.RBTree a) -> GHC.Types.Bool","ident":"RedBlackTree.isMember","start":{"column":1,"line":10},"stop":{"column":9,"line":10}},{"ann":"{v : GHC.Types.Bool | not v\n                      && v == False}","ident":"GHC.Types.False","start":{"column":19,"line":10},"stop":{"column":24,"line":10}},{"ann":"a","ident":"ds_d173r","start":{"column":5,"line":12},"stop":{"column":6,"line":12}},{"ann":"{VV : a | VV == val##a16Xc}","ident":"val","start":{"column":9,"line":12},"stop":{"column":12,"line":12}},{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (RedBlackTree.RBTree a) -> GHC.Types.Bool","ident":"RedBlackTree.isMember","start":{"column":15,"line":12},"stop":{"column":30,"line":12}},{"ann":"a","ident":"ds_d173r","start":{"column":24,"line":12},"stop":{"column":25,"line":12}},{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xb}","ident":"left","start":{"column":26,"line":12},"stop":{"column":30,"line":12}},{"ann":"a","ident":"ds_d173r","start":{"column":5,"line":13},"stop":{"column":6,"line":13}},{"ann":"{VV : a | VV == val##a16Xc}","ident":"val","start":{"column":10,"line":13},"stop":{"column":13,"line":13}},{"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","ident":"GHC.Types.True","start":{"column":16,"line":13},"stop":{"column":20,"line":13}},{"ann":"a","ident":"ds_d173r","start":{"column":5,"line":14},"stop":{"column":6,"line":14}},{"ann":"{VV : a | VV == val##a16Xc}","ident":"val","start":{"column":9,"line":14},"stop":{"column":12,"line":14}},{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (RedBlackTree.RBTree a) -> GHC.Types.Bool","ident":"RedBlackTree.isMember","start":{"column":15,"line":14},"stop":{"column":31,"line":14}},{"ann":"a","ident":"ds_d173r","start":{"column":24,"line":14},"stop":{"column":25,"line":14}},{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xd}","ident":"right","start":{"column":26,"line":14},"stop":{"column":31,"line":14}},{"ann":"{v : GHC.Types.Bool | not v\n                      && v == False}","ident":"GHC.Types.False","start":{"column":17,"line":15},"stop":{"column":22,"line":15}},{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a)","ident":"RedBlackTree.okasakiInsert","start":{"column":1,"line":18},"stop":{"column":14,"line":18}},{"ann":"a","ident":"x","start":{"column":15,"line":18},"stop":{"column":16,"line":18}},{"ann":"(RedBlackTree.RBTree a)","ident":"tree","start":{"column":17,"line":18},"stop":{"column":21,"line":18}},{"ann":"{VV : forall a .\n      (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == makeBlack##a16Xh}","ident":"makeBlack","start":{"column":24,"line":18},"stop":{"column":44,"line":18}},{"ann":"(RedBlackTree.RBTree a)","ident":"lq_anf$##7205759403793059139","start":{"column":34,"line":18},"stop":{"column":44,"line":18}},{"ann":"{v : (RedBlackTree.RBTree a) | v == tree##a16Xf}","ident":"tree","start":{"column":39,"line":18},"stop":{"column":43,"line":18}},{"ann":"(RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a)","ident":"ins","start":{"column":5,"line":20},"stop":{"column":8,"line":20}},{"ann":"(RedBlackTree.RBTree a)","ident":"lq_anf$##7205759403793059128","start":{"column":16,"line":20},"stop":{"column":36,"line":20}},{"ann":"{v : RedBlackTree.Color | v == Red}","ident":"RedBlackTree.Red","start":{"column":21,"line":20},"stop":{"column":24,"line":20}},{"ann":"{VV : forall a . (RedBlackTree.RBTree a) | VV == Leaf}","ident":"_","start":{"column":25,"line":20},"stop":{"column":29,"line":20}},{"ann":"{VV : a | VV == x##a16Xe}","ident":"x","start":{"column":30,"line":20},"stop":{"column":31,"line":20}},{"ann":"{VV : forall a . (RedBlackTree.RBTree a) | VV == Leaf}","ident":"_","start":{"column":32,"line":20},"stop":{"column":36,"line":20}},{"ann":"{VV : a | VV == x##a16Xe}","ident":"x","start":{"column":9,"line":22},"stop":{"column":10,"line":22}},{"ann":"{VV : a | VV == val##a16Xk}","ident":"val","start":{"column":13,"line":22},"stop":{"column":16,"line":22}},{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == balance}","ident":"RedBlackTree.balance","start":{"column":19,"line":22},"stop":{"column":53,"line":22}},{"ann":"{v : RedBlackTree.Color | v == color##a16Xi}","ident":"color","start":{"column":27,"line":22},"stop":{"column":32,"line":22}},{"ann":"(RedBlackTree.RBTree a)","ident":"lq_anf$##7205759403793059138","start":{"column":33,"line":22},"stop":{"column":43,"line":22}},{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xj}","ident":"left","start":{"column":38,"line":22},"stop":{"column":42,"line":22}},{"ann":"{VV : a | VV == val##a16Xk}","ident":"val","start":{"column":44,"line":22},"stop":{"column":47,"line":22}},{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xl}","ident":"right","start":{"column":48,"line":22},"stop":{"column":53,"line":22}},{"ann":"{VV : a | VV == x##a16Xe}","ident":"x","start":{"column":9,"line":23},"stop":{"column":10,"line":23}},{"ann":"{VV : a | VV == val##a16Xk}","ident":"val","start":{"column":14,"line":23},"stop":{"column":17,"line":23}},{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == Node}","ident":"RedBlackTree.Node","start":{"column":20,"line":23},"stop":{"column":45,"line":23}},{"ann":"{v : RedBlackTree.Color | v == color##a16Xi}","ident":"color","start":{"column":25,"line":23},"stop":{"column":30,"line":23}},{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xj}","ident":"left","start":{"column":31,"line":23},"stop":{"column":35,"line":23}},{"ann":"{VV : a | VV == val##a16Xk}","ident":"val","start":{"column":36,"line":23},"stop":{"column":39,"line":23}},{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xl}","ident":"right","start":{"column":40,"line":23},"stop":{"column":45,"line":23}},{"ann":"{VV : a | VV == x##a16Xe}","ident":"x","start":{"column":9,"line":24},"stop":{"column":10,"line":24}},{"ann":"{VV : a | VV == val##a16Xk}","ident":"val","start":{"column":13,"line":24},"stop":{"column":16,"line":24}},{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == balance}","ident":"RedBlackTree.balance","start":{"column":19,"line":24},"stop":{"column":53,"line":24}},{"ann":"{v : RedBlackTree.Color | v == color##a16Xi}","ident":"color","start":{"column":27,"line":24},"stop":{"column":32,"line":24}},{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xj}","ident":"left","start":{"column":33,"line":24},"stop":{"column":37,"line":24}},{"ann":"{VV : a | VV == val##a16Xk}","ident":"val","start":{"column":38,"line":24},"stop":{"column":41,"line":24}},{"ann":"(RedBlackTree.RBTree a)","ident":"lq_anf$##7205759403793059137","start":{"column":42,"line":24},"stop":{"column":53,"line":24}},{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xl}","ident":"right","start":{"column":47,"line":24},"stop":{"column":52,"line":24}},{"ann":"{v : (GHC.Classes.IP [GHC.Types.Char] GHC.Internal.Stack.Types.CallStack) | v == $dIP_a171q}","ident":"$dIP_a171q","start":{"column":21,"line":25},"stop":{"column":47,"line":25}},{"ann":"[GHC.Types.Char]","ident":"lq_anf$##7205759403793059136","start":{"column":27,"line":25},"stop":{"column":47,"line":25}},{"ann":"forall a . (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a)","ident":"makeBlack","start":{"column":5,"line":26},"stop":{"column":14,"line":26}},{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == Node}","ident":"RedBlackTree.Node","start":{"column":41,"line":26},"stop":{"column":66,"line":26}},{"ann":"{v : RedBlackTree.Color | v == Black}","ident":"RedBlackTree.Black","start":{"column":46,"line":26},"stop":{"column":51,"line":26}},{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xm}","ident":"left","start":{"column":52,"line":26},"stop":{"column":56,"line":26}},{"ann":"{VV : a | VV == val##a16Xn}","ident":"val","start":{"column":57,"line":26},"stop":{"column":60,"line":26}},{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xo}","ident":"right","start":{"column":61,"line":26},"stop":{"column":66,"line":26}},{"ann":"forall a .\nRedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a)","ident":"RedBlackTree.balance","start":{"column":1,"line":28},"stop":{"column":8,"line":28}},{"ann":"a","ident":"val3","start":{"column":65,"line":28},"stop":{"column":69,"line":28}},{"ann":"(RedBlackTree.RBTree a)","ident":"node4","start":{"column":70,"line":28},"stop":{"column":75,"line":28}},{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == Node}","ident":"RedBlackTree.Node","start":{"column":78,"line":28},"stop":{"column":151,"line":28}},{"ann":"{v : RedBlackTree.Color | v == Red}","ident":"RedBlackTree.Red","start":{"column":83,"line":28},"stop":{"column":86,"line":28}},{"ann":"(RedBlackTree.RBTree a)","ident":"lq_anf$##7205759403793059101","start":{"column":87,"line":28},"stop":{"column":116,"line":28}},{"ann":"{v : RedBlackTree.Color | v == Black}","ident":"RedBlackTree.Black","start":{"column":93,"line":28},"stop":{"column":98,"line":28}},{"ann":"{v : (RedBlackTree.RBTree a) | v == node1##a16Xp}","ident":"node1","start":{"column":99,"line":28},"stop":{"column":104,"line":28}},{"ann":"{VV : a | VV == val1##a16Xq}","ident":"val1","start":{"column":105,"line":28},"stop":{"column":109,"line":28}},{"ann":"{v : (RedBlackTree.RBTree a) | v == node2##a16Xr}","ident":"node2","start":{"column":110,"line":28},"stop":{"column":115,"line":28}},{"ann":"{VV : a | VV == val2##a16Xs}","ident":"val2","start":{"column":117,"line":28},"stop":{"column":121,"line":28}},{"ann":"(RedBlackTree.RBTree a)","ident":"lq_anf$##7205759403793059102","start":{"column":122,"line":28},"stop":{"column":151,"line":28}},{"ann":"{v : RedBlackTree.Color | v == Black}","ident":"RedBlackTree.Black","start":{"column":128,"line":28},"stop":{"column":133,"line":28}},{"ann":"{v : (RedBlackTree.RBTree a) | v == node3##a16Xt}","ident":"node3","start":{"column":134,"line":28},"stop":{"column":139,"line":28}},{"ann":"{VV : a | VV == val3##a16Xu}","ident":"val3","start":{"column":140,"line":28},"stop":{"column":144,"line":28}},{"ann":"{v : (RedBlackTree.RBTree a) | v == node4##a16Xv}","ident":"node4","start":{"column":145,"line":28},"stop":{"column":150,"line":28}}],"status":"unsafe","types":{"1":{"1":{"ann":"GHC.Types.Module","col":1,"ident":"RedBlackTree.$trModule","row":1}},"10":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (RedBlackTree.RBTree a) -> GHC.Types.Bool","col":1,"ident":"RedBlackTree.isMember","row":10},"19":{"ann":"{v : GHC.Types.Bool | not v\n                      && v == False}","col":19,"ident":"GHC.Types.False","row":10}},"12":{"15":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (RedBlackTree.RBTree a) -> GHC.Types.Bool","col":15,"ident":"RedBlackTree.isMember","row":12},"24":{"ann":"a","col":24,"ident":"ds_d173r","row":12},"26":{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xb}","col":26,"ident":"left","row":12},"5":{"ann":"a","col":5,"ident":"ds_d173r","row":12},"9":{"ann":"{VV : a | VV == val##a16Xc}","col":9,"ident":"val","row":12}},"13":{"10":{"ann":"{VV : a | VV == val##a16Xc}","col":10,"ident":"val","row":13},"16":{"ann":"{v : GHC.Types.Bool | v\n                      && v == True}","col":16,"ident":"GHC.Types.True","row":13},"5":{"ann":"a","col":5,"ident":"ds_d173r","row":13}},"14":{"15":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (RedBlackTree.RBTree a) -> GHC.Types.Bool","col":15,"ident":"RedBlackTree.isMember","row":14},"24":{"ann":"a","col":24,"ident":"ds_d173r","row":14},"26":{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xd}","col":26,"ident":"right","row":14},"5":{"ann":"a","col":5,"ident":"ds_d173r","row":14},"9":{"ann":"{VV : a | VV == val##a16Xc}","col":9,"ident":"val","row":14}},"15":{"17":{"ann":"{v : GHC.Types.Bool | not v\n                      && v == False}","col":17,"ident":"GHC.Types.False","row":15}},"18":{"1":{"ann":"forall a .\n(GHC.Classes.Ord<[]> a) =>\na -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a)","col":1,"ident":"RedBlackTree.okasakiInsert","row":18},"15":{"ann":"a","col":15,"ident":"x","row":18},"17":{"ann":"(RedBlackTree.RBTree a)","col":17,"ident":"tree","row":18},"24":{"ann":"{VV : forall a .\n      (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == makeBlack##a16Xh}","col":24,"ident":"makeBlack","row":18},"34":{"ann":"(RedBlackTree.RBTree a)","col":34,"ident":"lq_anf$##7205759403793059139","row":18},"39":{"ann":"{v : (RedBlackTree.RBTree a) | v == tree##a16Xf}","col":39,"ident":"tree","row":18}},"20":{"16":{"ann":"(RedBlackTree.RBTree a)","col":16,"ident":"lq_anf$##7205759403793059128","row":20},"21":{"ann":"{v : RedBlackTree.Color | v == Red}","col":21,"ident":"RedBlackTree.Red","row":20},"25":{"ann":"{VV : forall a . (RedBlackTree.RBTree a) | VV == Leaf}","col":25,"ident":"_","row":20},"30":{"ann":"{VV : a | VV == x##a16Xe}","col":30,"ident":"x","row":20},"32":{"ann":"{VV : forall a . (RedBlackTree.RBTree a) | VV == Leaf}","col":32,"ident":"_","row":20},"5":{"ann":"(RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a)","col":5,"ident":"ins","row":20}},"22":{"13":{"ann":"{VV : a | VV == val##a16Xk}","col":13,"ident":"val","row":22},"19":{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == balance}","col":19,"ident":"RedBlackTree.balance","row":22},"27":{"ann":"{v : RedBlackTree.Color | v == color##a16Xi}","col":27,"ident":"color","row":22},"33":{"ann":"(RedBlackTree.RBTree a)","col":33,"ident":"lq_anf$##7205759403793059138","row":22},"38":{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xj}","col":38,"ident":"left","row":22},"44":{"ann":"{VV : a | VV == val##a16Xk}","col":44,"ident":"val","row":22},"48":{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xl}","col":48,"ident":"right","row":22},"9":{"ann":"{VV : a | VV == x##a16Xe}","col":9,"ident":"x","row":22}},"23":{"14":{"ann":"{VV : a | VV == val##a16Xk}","col":14,"ident":"val","row":23},"20":{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == Node}","col":20,"ident":"RedBlackTree.Node","row":23},"25":{"ann":"{v : RedBlackTree.Color | v == color##a16Xi}","col":25,"ident":"color","row":23},"31":{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xj}","col":31,"ident":"left","row":23},"36":{"ann":"{VV : a | VV == val##a16Xk}","col":36,"ident":"val","row":23},"40":{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xl}","col":40,"ident":"right","row":23},"9":{"ann":"{VV : a | VV == x##a16Xe}","col":9,"ident":"x","row":23}},"24":{"13":{"ann":"{VV : a | VV == val##a16Xk}","col":13,"ident":"val","row":24},"19":{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == balance}","col":19,"ident":"RedBlackTree.balance","row":24},"27":{"ann":"{v : RedBlackTree.Color | v == color##a16Xi}","col":27,"ident":"color","row":24},"33":{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xj}","col":33,"ident":"left","row":24},"38":{"ann":"{VV : a | VV == val##a16Xk}","col":38,"ident":"val","row":24},"42":{"ann":"(RedBlackTree.RBTree a)","col":42,"ident":"lq_anf$##7205759403793059137","row":24},"47":{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xl}","col":47,"ident":"right","row":24},"9":{"ann":"{VV : a | VV == x##a16Xe}","col":9,"ident":"x","row":24}},"25":{"21":{"ann":"{v : (GHC.Classes.IP [GHC.Types.Char] GHC.Internal.Stack.Types.CallStack) | v == $dIP_a171q}","col":21,"ident":"$dIP_a171q","row":25},"27":{"ann":"[GHC.Types.Char]","col":27,"ident":"lq_anf$##7205759403793059136","row":25}},"26":{"41":{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == Node}","col":41,"ident":"RedBlackTree.Node","row":26},"46":{"ann":"{v : RedBlackTree.Color | v == Black}","col":46,"ident":"RedBlackTree.Black","row":26},"5":{"ann":"forall a . (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a)","col":5,"ident":"makeBlack","row":26},"52":{"ann":"{v : (RedBlackTree.RBTree a) | v == left##a16Xm}","col":52,"ident":"left","row":26},"57":{"ann":"{VV : a | VV == val##a16Xn}","col":57,"ident":"val","row":26},"61":{"ann":"{v : (RedBlackTree.RBTree a) | v == right##a16Xo}","col":61,"ident":"right","row":26}},"28":{"1":{"ann":"forall a .\nRedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a)","col":1,"ident":"RedBlackTree.balance","row":28},"105":{"ann":"{VV : a | VV == val1##a16Xq}","col":105,"ident":"val1","row":28},"110":{"ann":"{v : (RedBlackTree.RBTree a) | v == node2##a16Xr}","col":110,"ident":"node2","row":28},"117":{"ann":"{VV : a | VV == val2##a16Xs}","col":117,"ident":"val2","row":28},"122":{"ann":"(RedBlackTree.RBTree a)","col":122,"ident":"lq_anf$##7205759403793059102","row":28},"128":{"ann":"{v : RedBlackTree.Color | v == Black}","col":128,"ident":"RedBlackTree.Black","row":28},"134":{"ann":"{v : (RedBlackTree.RBTree a) | v == node3##a16Xt}","col":134,"ident":"node3","row":28},"140":{"ann":"{VV : a | VV == val3##a16Xu}","col":140,"ident":"val3","row":28},"145":{"ann":"{v : (RedBlackTree.RBTree a) | v == node4##a16Xv}","col":145,"ident":"node4","row":28},"65":{"ann":"a","col":65,"ident":"val3","row":28},"70":{"ann":"(RedBlackTree.RBTree a)","col":70,"ident":"node4","row":28},"78":{"ann":"{VV : forall a .\n      RedBlackTree.Color -> (RedBlackTree.RBTree a) -> a -> (RedBlackTree.RBTree a) -> (RedBlackTree.RBTree a) | VV == Node}","col":78,"ident":"RedBlackTree.Node","row":28},"83":{"ann":"{v : RedBlackTree.Color | v == Red}","col":83,"ident":"RedBlackTree.Red","row":28},"87":{"ann":"(RedBlackTree.RBTree a)","col":87,"ident":"lq_anf$##7205759403793059101","row":28},"93":{"ann":"{v : RedBlackTree.Color | v == Black}","col":93,"ident":"RedBlackTree.Black","row":28},"99":{"ann":"{v : (RedBlackTree.RBTree a) | v == node1##a16Xp}","col":99,"ident":"node1","row":28}}}}